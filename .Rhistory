source('C:/Users/sizem/Dropbox/Coursera/Software_Development_in_R/Advanced R Programming/oop_output.R')
install.packages("tidyverse")
install.packages(c("backports", "glue", "tidyr", "vctrs"))
install.packages("tidytuesdayR")
R.version.string
update.packages(ask = FALSE, checkBuilt = TRUE)
install.packages("usethis")
install.packages(c("backports", "callr", "jsonlite", "openssl", "processx", "stringi", "tinytex", "usethis", "xfun"))
install.packages("tidytuesdayR")
# Either ISO-8601 date or year/week works!
tuesdata <- tidytuesdayR::tt_load('2020-09-22')
tuesdata <- tidytuesdayR::tt_load(2020, week = 39)
climbers <- tuesdata$climbers
climbers
names(climbers)
names(tuesdata)
head(tuesdata)
install.packages(c("devtools", "roxygen2"))
install.packages(c("knitr", "withr", "xfun"))
library(roxygen2)
?stop
?make_filename
??make_filename
install.packages(c("cpp11", "DT"))
install.packages("devtools")
install.packages("roxygen2")
install.packages("leaflet")
install.packages("plotly")
install.packages(c("caret", "e1071", "mlbench"))
?train
??train
??caret::train
?caret::train
install.packages(c("broom", "digest", "labeling", "rmarkdown"))
install.packages("randomForest")
install.packages("car")
library(dplyr)
activity <- tbl_df(read.csv("data/activity.csv"))
by_date <- activity %>%
group_by(date) %>%
summarize(total_steps = sum(steps, na.rm = TRUE))
mean(by_date$total_steps)
median(by_date$total_steps)
by_interval <- activity %>%
group_by(interval) %>%
summarize(average_steps = mean(steps, na.rm = TRUE))
plot(by_interval$interval, by_interval$average_steps, type ="l", main = "Average Steps per 5 Minute Interval", xlab="Interval", ylab="Avg. # of Steps")
tail(arrange(by_interval, average_steps))
names(activity)
activity <- mutate(activity, contains_na = is.na(steps) | is.na(date) | is.na(interval))
sum(activity$contains_na)
head(by_interval)
new_data <- mutate(activity, steps = as.double(steps))
new_data$avg_steps <- by_interval$average_steps
head(by_interval)
head(activity)
head(by_interval)
head(by_interval)
head(activity)
new_data <- mutate(activity, steps = as.double(steps))
new_data <- left_join(newdata, by_interval, by = "interval")
new_data <- mutate(activity, steps = as.double(steps))
new_data <- left_join(new_data, by_interval, by = "interval")
new_data <- mutate(new_data, steps = if_else(is.na(steps),avg_steps,steps))
new_data <- mutate(activity, steps = as.double(steps))
new_data <- left_join(new_data, by_interval, by = "interval")
new_data <- mutate(new_data, steps = if_else(is.na(steps),average_steps,steps))
?%>%
?'%>%'
new_data <- mutate(activity, steps = as.double(steps)) %>%
left_join(by_interval, by = "interval") %>%
mutate(steps = if_else(is.na(steps),average_steps,steps))
?t
?levels
?download.file
?'+'
library(ggplot2)
?ggplot
?geom_point
?aes
?color
?pdf
?dev
?dev.off
?pdf
install.packages("lattice")
install.packages(c("lme4", "SQUAREM"))
library(lattice)
data(barley)
head(barley)
ggplot(data=barley, aes(year, yield, collor = variety))
ggplot(data=barley, aes(year, yield, color = variety))
ggplot(data=barley, aes(year, yield, color = variety))
ggplot(data=barley, aes(year, yield)) + geom_point(color = variety)
ggplot(data=barley, aes(year, yield)) + geom_point(aes(color = variety))
data(trees)
head(trees)
ggplot(trees, aes(x = Girth, y = Height, size = Volume)) +
geom_point()
trees %>%
ggplot(aes(x = Girth, y = Height)) +
geom_point(aes(size = Volume))
library(tidyverse)
trees %>%
ggplot(aes(x = Girth, y = Height)) +
geom_point(aes(size = Volume))
trees %>%
ggplot() +
geom_point(x = Girth, y = Height, size = Volume)
trees %>%
ggplot(aes(x = Girth, y = Height)) +
geom_point(size = Volume)
trees %>%
ggplot() +
geom_point(x = Girth, y = Height, size = Volume)
trees %>%
ggplot() +
geom_point(aes(x = Girth, y = Height, size = Volume))
trees %>%
ggplot() +
geom_point(aes(x = Girth, y = Height, size = Volume))
ggplot() +
geom_point(trees,
aes(x = Girth, y = Height, size = Volume))
trees %>%
ggplot(aes(x = Girth, y = Height, size = Volume)) +
geom_point()
?scale_x_continuous
?scale
?geom_scale
ggplot(data=barley, aes(year, yield)) + geom_point(aes(color = variety))
trees %>%
ggplot(aes(x = Girth, y = Height, size = Volume)) +
geom_point()
trees %>%
ggplot(aes(x = Girth, y = Height, size = Volume)) +
geom_point()
ggplot(trees, aes(x = Girth, y = Height, size = Volume)) +
geom_point()
ggplot() +
geom_point(trees,
aes(x = Girth, y = Height, size = Volume))
trees %>%
ggplot() +
geom_point(x = Girth, y = Height, size = Volume)
trees %>%
ggplot() +
geom_point(aes(x = Girth, y = Height, size = Volume))
trees %>%
ggplot(aes(x = Girth, y = Height)) +
geom_point(size = Volume)
ggplot() +
geom_point(data = trees,
aes(x = Girth, y = Height, size = Volume))
trees %>%
ggplot(aes(x = Girth, y = Height, size = Volume)) +
geom_point()
trees %>%
ggplot(aes(x = Girth, y = Height)) +
geom_point(aes(size = Volume))
?ggmap
??ggmap
install.packages("ggmap")
?ggmap
library(ggmap)
?ggmap
?geom_point
?theme_void
library(ggplot2)
library(dplyr)
USArrests %>%
mutate(region = tolower(rownames(USArrests))) %>%
left_join(map_data("state"), by = "region") %>%
ggplot(aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon() +
theme_void()
library(ggplot2)
library(dplyr)
USArrests %>%
mutate(region = tolower(rownames(USArrests))) %>%
left_join(map_data("state"), by = "region") %>%
ggplot(aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon()
library(ggplot2)
library(dplyr)
USArrests %>%
mutate(region = tolower(rownames(USArrests))) %>%
left_join(map_data("state"), by = "region") %>%
ggplot(aes(x = long, y = lat, group = group, fill = Murder)) +
geom_polygon() +
theme_void()
?USArrests
head(USArrests)
?map_data
data <- USArrests %>%
+     mutate(region = tolower(rownames(USArrests))) %>%
+     left_join(map_data("state"), by = "region")
head(data)
16/15
16/15*((7*60)+12)
/60
460.8/60
.68*60
16/15*((6*60)+32)
418.13/60
.968*60
library(grid)
library(ggplot2)
?grid
?dplyr::mutate
install.packages("geosphere")
source('cleaning_script.R')
source('geom_hurricane.R')
library(maps)
library(tidyverse)
gulf_coast <- map_data("state") %>% subset(region %in% c('texas','louisiana'))
ike_data <- get_ike_data() %>%
filter(datetime %in% lubridate::ymd_hm("2008-09-13 06:00")) %>%
mutate(windspeed = as.factor(windspeed),
longitude = -1*as.numeric(longitude),
latitude = as.numeric(latitude))
base_map <- ggplot(data = gulf_coast) +
geom_polygon(aes(x = long, y = lat, group = group), fill = "palegreen", color = "black") +
coord_fixed(1.3)
?system.file
source('c:/Users/sizem/Dropbox/git/ggplot-geom/plot_geom.R')
?getwd
source('c:/Users/sizem/Dropbox/git/ggplot-geom/plot_geom.R')
install.packages(c("cli", "colorspace", "cpp11", "data.table", "gh", "isoband", "lava", "lme4", "lubridate", "magrittr", "pillar", "processx", "ps", "raster", "RcppArmadillo", "recipes", "rlang", "rprojroot", "rstudioapi", "vctrs", "waldo"))
?lubridate::ymd_hms
install.packages(c("backports", "jsonlite"))
install.packages(c("BH", "brio", "broom", "cli", "cpp11", "crayon", "crosstalk", "data.table", "DBI", "dbplyr", "diffobj", "dplyr", "DT", "fansi", "farver", "forcats", "ggplot2", "git2r", "hexbin", "hms", "htmltools", "htmlwidgets", "ipred", "isoband", "knitr", "leaflet", "lifecycle", "lubridate", "MatrixModels", "matrixStats", "memoise", "mime", "mlbench", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plotly", "pROC", "promises", "ps", "quantreg", "Rcpp", "RcppArmadillo", "RcppEigen", "reprex", "rio", "rlang", "rmarkdown", "sp", "SparseM", "SQUAREM", "testthat", "tibble", "tidyr", "tinytex", "usethis", "vctrs", "waldo", "withr", "xfun"))
install.packages(c("desc", "dplyr", "pillar", "waldo"))
install.packages("reticulate")
install.packages("reticulate")
setwd("C:/Users/sizem/Dropbox/git/lss-parser")
n
